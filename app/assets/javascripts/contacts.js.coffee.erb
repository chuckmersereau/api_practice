$ ->

  if $('#new_contact')[0]?
      fillInNames = ->
        contactName = $("#contact_name").val()
        lastName = contactName.substr(0, contactName.indexOf(","))
        afterLastName = contactName.substr(contactName.indexOf(",") + 1).trim()
        firstNames = afterLastName.split(RegExp(" & | and "))
        $("#contact_greeting").val afterLastName  unless $("#contact_greeting").val()

        #first person
        $(".last_name").first().val lastName  unless $(".last_name").first().val()
        $(".first_name").first().val firstNames[0]  unless $(".first_name").first().val()

        #second person
        if firstNames.length > 1
          $("#add_person a").trigger "click"  if $(".last_name").length < 2
          $(".last_name:eq(1)").val lastName  unless $(".last_name:eq(1)").val()
          $(".first_name:eq(1)").val firstNames[1]  unless $(".first_name:eq(1)").val()
        window.scrollTo 0, 0

      $("#new_contact").submit ->
          fillInNames()

      $("#contact_name").focusout ->
          fillInNames()

  if $('.contacts_controller')[0]?

    $("#contact_pledge_amount").focusout ->
        amount = $(this).val()
        $("#contact_status").val "Partner - Financial"  if amount and amount > 0
        return

    if $('#contacts_find_duplicates')[0]?
      $.ajax {
        url: '/contacts/find_duplicates',
        dataType: 'script',
        error: () ->
          $('.wpp').html('<div class="mwrap"><div class="inside alert">' + __("There was an error searching for duplicates. We've been notified") + '</div></div>')
      }

      $(document).on 'click', '.select_all', ->
        $('input[type=checkbox]').prop('checked', true)
        false

      $(document).on 'click', '[data-behavior=not_duplicates]', ->
        # do last check here for 1 not after remove for 0 because remove seems to take time to update counter
        last_duplicate_visible = $('.duplicate_set:visible').length == 1
        div = $(this).closest('.duplicate_set')
        div.fadeOut('fast')
        $('input', div).remove()
        if last_duplicate_visible
          location.reload(true)

    if $('#contacts_index')[0]?

      # quick search for contact
      $('#contact_name').autocomplete({
        source: account_contacts_json,
        select: (event, ui) ->
          document.location = '/contacts/' + ui.item.id
          false
      })

      # check all feature
      $(document).on 'click', '.checkall', ->
        $('.checks input[type=checkbox]').prop('checked', $(this).prop('checked'))

        $.mpdx.updateSelectedContactIds()

      $(document).on 'click', '.checks input[type=checkbox]', ->
        unless $('.checks input').is(':checked')
          $('#select_more').hide()
          $('.checkall').prop('checked', false)

        if $(this).is(':checked')
          if $('.checks input:checked').length == $('.checks input').length
            $('#select_all_prompt').show()
        else
          $('#select_all_prompt').hide()
          $('#clear_selection_prompt').hide()

        $.mpdx.updateSelectedContactIds()

      $(document).on 'click', '[data-behavior=select_all]', ->
        $('#select_all_prompt').hide()
        $('#clear_selection_prompt').show()
        $('#selected_ids').val(filtered_contacts_ids.join(','))

      $(document).on 'click', '[data-behavior=clear_selection]', ->
        $('#select_more').hide()
        $('.checkall').prop('checked', false)
        $('.checks input[type=checkbox]').prop('checked', false)
        $('#select_all_prompt').show()
        $('#clear_selection_prompt').hide()
        $('#selected_ids').val('')

      # Actions
      $(document).on 'click', '.actionbtn', ->
        if $('.checks input:checked').length == 0 && !$(this).nextAll('.action_list').is(':visible')
          alert(__("You must select at least one contact you'd like to perform an action on."))
          return false

        $(this).nextAll('.action_list').toggle()
        $(this).toggleClass('on')
        false

      $(document).on 'click', '[data-behavior=add_tag_to_list]', ->
        $('#add_tag_modal #add_tag_contact_ids').val($('#selected_ids').val())
        $('#add_tag_modal').dialog {
          buttons: [
            {
              text: __('Add Tag')
              click: (e) ->
                return false if $.trim($('#add_tag_name').val()) == ''
                $('form', this).submit()
                $('.form_wrapper', this).html('<%= image_tag('spinner.gif') %>')
                $(this).dialog( "option", "buttons", [])
            },
            {
              text: __('Cancel')
              click: ->
                $(this).dialog("close")
            }
          ]
        }
        $('#add_tag_name').focus()
        false

      $(document).on 'click', '[data-behavior=remove_tag_from_list]', ->
        $('#remove_tag_modal #remove_tag_contact_ids').val($('#selected_ids').val())
        $('#remove_tag_modal').dialog {
          buttons: [
            {
              text: __('Cancel')
              click: ->
                $(this).dialog("close")
            }
          ]
        }
        $('a').blur()
        false


      $(document).on 'click', '#add_tag_modal .tag', ->
        $('#add_tag_name').val($(this).attr('data-name'))
        modal = $('#add_tag_modal')
        $('form', modal).submit()
        $('.form_wrapper', modal).html('<%= image_tag('spinner.gif') %>')
        modal.dialog( "option", "buttons", [])
        false

      $(document).on 'click', '#remove_tag_modal .tag', ->
        $('#remove_tag_name').val($(this).attr('data-name'))
        modal = $('#remove_tag_modal')
        $('form', modal).submit()
        $('.form_wrapper', modal).html('<%= image_tag('spinner.gif') %>')
        modal.dialog( "option", "buttons", [])
        false

      $(document).on 'click', '[data-behavior=add_task_to_list]', ->
        $('#add_task_modal .form_wrapper').html('<%= image_tag("spinner.gif") %>')
        ids = $.mpdx.updateSelectedContactIds()
        $.ajax {
          url: '/tasks/new',
          data: {add_task_contact_ids: ids.join(','), completed: $(this).attr('data-completed')},
          dataType: 'script',
          type: 'GET'
        }

        $('#add_task_modal').dialog {
          width: 'auto',
          maxHeight: 600,
          buttons: [
            {
              text: __('Add Task')
              click: (e) ->
                form = $('form', this)
                return false if $.trim($('#task_subject', form).val()) == ''
                form.submit()
                $('.form_wrapper', this).html('<%= image_tag('spinner.gif') %>')
            },
            {
              text: __('Cancel')
              click: ->
                $(this).dialog("close")
            }
          ],
          close: ->
            $('#task_modal_form').removeClass('dirty')
        }
        false

      $(document).on 'click', '[data-behavior=bulk_edit]', ->
        $('#bulk_edit_modal #bulk_edit_contact_ids').val($('#selected_ids').val())
        $('#bulk_edit_modal').dialog {
          width: 550,
          buttons: [
            {
              text: __('Update')
              click: (e) ->
                $('form', this).submit()
                $('.form_wrapper', this).html('<%= image_tag('spinner.gif') %>')
                $(this).dialog( "option", "buttons", [])
            },
            {
              text: __('Cancel')
              click: ->
                $(this).dialog("close")
            }
          ]
        }
        setTimeout ->
          $('#bulk_edit_modal [data-calendar-jquery]').datepicker({
            changeYear: true,
            dateFormat: 'yy-mm-dd',
            autoclose: true,
            todayHighlight: true
          });
        $('#add_tag_name').focus()
        false

      $(document).on 'click', '[data-behavior=merge]', ->
        if $('.checks input:checked').length >= 9
          alert(__('You can merge up to eight contacts at a time. Please uncheck a contact and try again.'))
          return false
        if $('.checks input:checked').length < 2
          alert(__('You must select at least 2 contacts to merge.'))
          return false

        $('#merge_modal #merge_contact_ids').val($('#selected_ids').val())
        $('#merge_modal').dialog {
          buttons: [
            {
              text: __('Merge')
              click: (e) ->
                $('form', this).submit()
                $('.form_wrapper', this).html('<%= image_tag('spinner.gif') %>')
                $(this).dialog( "option", "buttons", [])
            },
            {
              text: __('Cancel')
              click: ->
                $(this).dialog("close")
            }
          ]
        }
        false

    if $('#contacts_show')[0]?
      # Merge people stuff
      $(document).on 'click', '.js-merge_people', ->
        $(this).hide()
        $('.js-merge_related').show()
        $('#contact-people').addClass('merging-people')
        false

      $(document).on 'click', '.js-cancel_merge_people', ->
        $('.js-merge_related').hide()
        $('.js-merge_people').show()
        $('#contact-people').removeClass('merging-people')
        $('.merge-person-checked').removeClass('merge-person-checked')
        false

      $(document).on 'click', '.small-person', ->
        if $('#contact-people').hasClass('merging-people')
          $(this).toggleClass('merge-person-checked')
          return false
        true

      $(document).on 'click', '.js-people input[type=submit]', ->
        form = $(this)
        person_ids = []

        $('#person_merge_winner li').hide()

        $('.merge-person-checked').each ->
          id = $(this).attr('id').substr(7)
          person_ids.push(id)
          $('#merge_winner_' + id + '_li').show()

        unless person_ids.length > 1
          alert(__("You have to pick at least 2 people to merge"))
          return false

        $('#person_merge_winner').dialog {
          buttons: [
            {
              text: __('Merge'),
              click: ->
                if $('input[name=merge_winner]:checked')[0]
                  form = $('form', this)
                  $('#merge_people_ids').val(person_ids)
                  form.submit()
                  $(this).dialog('destroy')
                  $('#page_spinner').dialog({modal: true, closeOnEscape: false})
                else
                  alert(__('You need to specify which person will "win" the merge'))
            },
            {
              text: __('Cancel'),
              click: ->
                $(this).dialog('destroy')
            }

          ]
        }
        false

      $.mpdx.sortableTabs('contact')

      # Filter contact list
      $(document).on 'keyup', '#contact_name', ->
        name = $(this).val()
        regex = new RegExp('.*' + name + '.*', 'i')
        $('[data-hook=contact]').each ->
          if regex.test($('[data-name]', this).attr('data-name'))
            $(this).show()
          else
            $(this).hide()

      # autosave contact notes
      $(document).on 'keydown', 'textarea.contact_notes', ->
        $('input[type=submit]', $(this).closest('form')).prop('disabled', false)

      $('textarea.contact_notes').observe_field 500, ->
        form$ = $(this).closest('form')
        $('input[type=submit]', form$).prop('disabled', true)
        form$.submit()

      $(window).on 'statechange', ->
        state = History.getState()
        if $('#contentbody').attr('data-contact-id')
          unless Number(state.data.contact_id) == Number($('#contentbody').attr('data-contact-id'))
            $('a[data-id=' + state.data.contact_id + ']').click()
        else
          document.location = State.url

      $(document).on 'tabsactivate', '#contact', (event, ui)->
        $.mpdx.loadTabData(ui.newPanel.selector)

      $.mpdx.loadTabData()

      $(document).on 'click', '.next_page', ->
        $(this).replaceWith('<%= image_tag('spinner.gif', class: 'spinner') %>')

    $('.country_select').selectToAutocomplete()

    $('.address_remotely_managed').each ->
      fieldset = $(this).closest('.rs')
      $("input[type=text], textarea, .country_select", fieldset).attr 'readonly', true
      $('.address_region, .address_metro_area', fieldset).removeAttr 'readonly'

    $(document).on 'click', 'input.primary', ->
      if $(this).prop('checked',true)
        fieldset = $(this).closest('.fieldset')
        $('input[type=checkbox].primary', fieldset).prop('checked',false)
        $(this).prop('checked', true)

    $(document).on 'click', '.add_field', ->
      fieldset = $(this).closest('.fieldset')
      if $('input[type=checkbox].primary:checked:visible', fieldset).length == 0
        newly_added_recordset = $('div.field:eq(-1)', fieldset)
        if newly_added_recordset.length == 0
          newly_added_recordset = $('div.address_field:eq(-1)', fieldset)
        $('input[type=checkbox].primary', $(newly_added_recordset)).prop('checked', true)

    historicDisable = (check, input_selector) ->
      recordset = $(check).closest('.field')
      if recordset.length == 0
        recordset = $(check).closest('.address_field')

      if $(check).is(':checked')
        $(input_selector, recordset).attr('readonly', true)
        $(input_selector, recordset).addClass('no_longer_valid')
        $('input[type=checkbox].primary', recordset).prop('checked', false)
        $('input[type=checkbox].primary', recordset).attr('disabled', true)
      else
        $(input_selector, recordset).removeClass 'no_longer_valid'
        $('input[type=checkbox].primary', recordset).removeAttr('disabled')
        if recordset.children('.address_remotely_managed').length == 0
          $(input_selector, recordset).removeAttr('readonly')

    $("input.address_historic").each ->
      historicDisable this, "input[type=text], textarea, .country_select, select"
      return

    $(document).on 'click', 'input.address_historic', ->
      historicDisable this, "input[type=text], textarea, .country_select, select"

    $("input.email_historic").each ->
      historicDisable this, "input[type=email]"
      return

    $(document).on 'click', 'input.email_historic', ->
      historicDisable this, "input[type=email]"

    $("input.phone_historic").each ->
      historicDisable this, "input[type=tel]"
      return

    $(document).on 'click', 'input.phone_historic', ->
      historicDisable(this, "input[type=tel]")

    $(document).on 'click', 'td.qaction a.quick', ->
      td = $(this).closest('td')
      $('td.qaction[id!='+td.attr('id')+'] .quick_action_list').hide()
      $('td.qaction[id!='+td.attr('id')+'] a.quick').removeClass('on')
      $('.quick_action_list', td).toggle()
      $(this).toggleClass('on')
      false

    $('td.qaction').hoverIntent {
      over: ->{},
      timeout: 500,
      out: ->
        $('.quick_action_list', $(this)).hide()
        $('a.quick', $(this)).removeClass('on')
    }

    $(document).on 'click', '[data-behavior=hide_contact]', ->
      $(this).closest('tr').fadeOut 'fast', ->
        $(this).closest('tr').remove()

    $(document).on 'click', '[data-behavior=bulk_hide_contact]', ->
      ids = $.mpdx.updateSelectedContactIds()

      # remove items
      $(ids).each ->
        row = $('#contact_' + this)
        row.fadeOut 'fast', ->
          row.remove()

      $.ajax {
        url: '/contacts/bulk_destroy',
        data: {ids: ids},
        dataType: 'script',
        type: 'DELETE'
        error: ->
          alert(__('There was an error hiding your contacts'))
      }

    $.mpdx.loadDonations()

    # fix to hide mysterious donations tab that won't go away
    $('#tabs_donations').remove()

$.mpdx.updateSelectedContactIds = ->
  ids = []
  $('[name="contact_ids[]"]:checked').each ->
    ids.push($(this).val())
  $('#selected_ids').val(ids.join(','))
  ids

$.mpdx.loadTabData = (hash) ->
  hash ||= window.location.hash || $('#contact .ui-tabs-anchor').first().attr('href')
  switch hash
    when '#details-tab'
      $.mpdx.loadContactDetails()
    when '#tasks-tab'
      $.mpdx.loadContactTasks()
    when '#history-tab'
      $.mpdx.loadContactHistory()
    when '#referrals-tab', ''
      $.mpdx.loadReferrals()
    when '#social-tab'
      $.mpdx.loadSocialStream()

$.mpdx.loadContactDetails = ->
  if $('#details').html() == ''
    $.ajax {
      url: '/contacts/' + $('#contentbody').attr('data-contact-id') + '/details',
      dataType: 'script'
    }

$.mpdx.loadDonations = ->
  if $('#donations').html() == ''
    $.ajax {
      url: '/donations',
      data: {contact_id: $('#contentbody').attr('data-contact-id')},
      dataType: 'script'
    }

$.mpdx.loadContactTasks = ->
  if $('#tasks').html() == ''
    $.ajax {
      url: '/tasks',
      data: {filters: {contact_ids: $('#contentbody').attr('data-contact-id')}},
      dataType: 'script'
    }

$.mpdx.loadContactHistory = ->
  if $('#history').html() == ''
    $.ajax {
      url: '/tasks/history',
      data: {filters: {date_range: 'all', contact_ids: $('#contentbody').attr('data-contact-id')}},
      dataType: 'script'
    }

$.mpdx.loadReferrals = ->
  if $('#referrals').html() == ''
    $.ajax {
      url: '/contacts/' + $('#contentbody').attr('data-contact-id') + '/referrals',
      dataType: 'script'
    }

$.mpdx.loadSocialStream = ->
  if $('#social').html() == ''
    $.ajax {
      url: '/social_streams',
      data: {contact_id: $('#contentbody').attr('data-contact-id')},
      dataType: 'script'
    }

$.mpdx.reloadContact = ->
  return if !$('#contentbody').attr('data-contact-id')
  location.reload()

$.mpdx.saveContactTags = (tags, contactId) ->
  if lastSaveTagsValue == tags
    return
  jQuery.ajax
    url: '/api/v1/contacts/' + contactId + '?account_list_id=' + window.current_account_list_id
    type: 'PUT'
    contentType: 'application/json'
    data: JSON.stringify(contact: tag_list: tags)
    success: ->
      lastSaveTagsValue = tags
      return
  return
