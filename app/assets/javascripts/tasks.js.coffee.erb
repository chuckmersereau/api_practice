$ ->
  $(document).on 'click', '.task .people a', ->
    contact_info = $(this).closest('.people').next('.contact_info')
    if contact_info[0]? && contact_info.html() != ''
      $('#mini_contact_modal').html(contact_info.html())
      $('#mini_contact_modal').dialog
        modal:'true',
        resizable: false,
        width: '400px',
        maxHeight: 600,
        title: contact_info.attr('data-title'),
        buttons: [
          {
            text: __('Go to contact'),
            click: (e) ->
              document.location = '/contacts/' + contact_info.attr('data-id')
          },
          {
            text: __('Close'),
            click: ->
              $(this).dialog("close")
          }
        ]
    else
      document.location = '/contacts/' + contact_info.attr('data-id')

    false

  $(document).on 'click', '.task_show_more', ->
    $(this).parent().html($(this).next('.task_all_contacts').html())
    false

  # new task button
  $(document).on 'click', '.add_task', ->
    if $(this).attr('data-remote') == 'true'
      $('#edit_task_modal .form_wrapper').html('<%= image_tag "spinner.gif" %>')
    else
      if $(this).attr('data-contact-id')
        $('#modal_task_activity_contacts_attributes_0_contact_id').val($(this).attr('data-contact-id'))
      else
        $('#modal_task_activity_contacts_attributes_0_contact_id').val('')

      if $(this).attr('data-activity-type')
        $('#modal_task_activity_type').val($(this).attr('data-activity-type'))
      else
        $('#modal_task_activity_type').val('Call')

    logTask = $(this).attr("data-completed")

    $('#edit_task_modal').dialog
      resizable: false,
      modal:'true',
      width: '400px',
      maxHeight: 600,
      buttons: [
        {
          text: __('Save'),
          click: (e) ->
            form = $('form', this)
            if $.trim($('#modal_task_subject', form).val()) == ''
              alert(__("Please enter a subject"))
              return false

            if logTask == 'true'
              $(this).dialog('close')
              angular.element('#task-followup-dialog').scope().logTask(form)
            else
              $.rails.handleRemote(form)
              $('.form_wrapper', this).html('<%= image_tag("spinner.gif") %>')
            if $('#tasks_index')[0]?
              angular.element(jQuery("#contentbody")).scope().refreshVisibleTasks()
        },
        {
          text: __('Cancel'),
          click: ->
            $(this).dialog("close")
        }
      ],
      close: ->
        $('#task_modal_form').removeClass('dirty')
    false

  # Edit task button
  $(document).on 'click', '.edit_task', ->
    $('#edit_task_modal .form_wrapper').html('<%= image_tag "spinner.gif" %>')
    $('#edit_task_modal').dialog
      resizable: true,
      modal:'true',
      width: '400px',
      maxHeight: 600,
      buttons: [
        {
          text: __('Save'),
          click: (e) ->
            form = $('form', this)
            if $.trim($('#modal_task_subject', form).val()) == ''
              alert(__("Please enter a subject"))
              return false
            $.rails.handleRemote(form)
            $('.form_wrapper', this).html('<%= image_tag("spinner.gif") %>')
            if $('#tasks_index')[0]?
              angular.element(jQuery('#contentbody')).scope().refreshVisibleTasks()
        },
        {
          text: __('Cancel'),
          click: ->
            $(this).dialog("close")
        }
      ],
      close: ->
        $('#task_modal_form').removeClass('dirty')

  if $('#tasks_index')[0]?
    $(document).on 'click', '[data-behavior=bulk_complete]', ->
      title = __('Complete Tasks')
      form = $('#task_result_modal form')
      form.attr('action', '/tasks/bulk_update')
      $('#bulk_task_update_ids', form).val($.mpdx.getSelectedTaskIds($(this).closest('table')).join(','))

      # Marking a task off, open the result modal
      $('#task_result_modal').dialog
        title: title,
        resizable: false,
        modal:'true',
        maxHeight: 600,
        buttons: [
          {
            text: __('Complete'),
            click: (e) ->
              $('#task_result_task_completed').val(true)
              $('form', this).submit()
              $(this).dialog("close")
              $('#page_spinner').dialog(modal: true)
          },
          {
            text: __('Cancel'),
            click: ->
              $(this).dialog("close")
          }
        ]
      false

    $(document).on 'click', '[data-behavior=bulk_edit]', ->
      form = $('#bulk_edit_task_modal form')
      form.attr('action', '/tasks/bulk_update')
      form.append('<input type="hidden" name="_method" value="put" />')
      $('select', form).prepend('<option></option>')
      $('select', form).val('')
      $('#bulk_task_update_ids', form).val($.mpdx.getSelectedTaskIds($(this).closest('table')).join(','))

      $('#task_start_at_1i, #task_start_at_2i, #task_start_at_3i').val('')

      $('#bulk_edit_task_modal').dialog
        resizable: false,
        modal:'true',
        width: '400px',
        maxHeight: 600,
        buttons: [
          {
            text: __('Save'),
            click: (e) ->
              $.rails.handleRemote(form)
              $('.form_wrapper', this).html('<%= image_tag("spinner.gif") %>')
              $(this).dialog( "option", "buttons", [])
          },
          {
            text: __('Cancel'),
            click: ->
              $(this).dialog("close")
          }
        ]
      false

    $(document).on 'click', '[data-behavior=bulk_delete]', ->
      if !window.confirm(__('Are you sure you want to delete the selected tasks?'))
        return

      $('#page_spinner').dialog(modal: true)

      ids = $.mpdx.getSelectedTaskIds($(this).closest('table'))

      # remove items
      $(ids).each ->
        $('#task_' + this).fadeOut()

      $.ajax {
        url: '/tasks/bulk_destroy',
        data: {ids: ids},
        dataType: 'script',
        type: 'DELETE'
        error: ->
          $('#page_spinner').dialog('close')
          alert(__('There was an error deleting your tasks'))
      }

      $('#page_spinner').dialog('close')
      false

  $(document).on 'click', '#tasks_index .select_all', ->
    table = $(this).closest('table')
    $('input[type=checkbox]', table).prop('checked', $(this).prop('checked'))
    if $(this).prop('checked')
      $('.taskgroup .actions', table).show()
    else
      $('.taskgroup .actions', table).hide()

  $(document).on 'click', '#tasks_index .check input[type=checkbox]', ->
    table = $(this).closest('table')
    showOptions = false
    $('.check input[type=checkbox]', table).each ->
      if $(this).prop('checked')
        $('.taskgroup .actions', table).show()
        showOptions = true
        return
    if !showOptions
      $('.taskgroup .actions', table).hide()

  $(document).on 'click', 'tr.task .fav', ->
    id = $(this).closest('tr').attr('data-id')
    form = $('#task_result_modal form')
    form.attr('action', '/tasks/' + id)

    field = $('input[name="task[starred]"]', form)
    if $(this).hasClass('fa-star')
      field.val(false)
    else
      field.val(true)
    $('select[name="task[result]"]', form).val('')
    form.submit()
    $(this).toggleClass('fa-star-o')
    $(this).toggleClass('fa-star')

  # When someone marks off a task, we need to open a modal to ask the result
  $(document).on 'click', '[data-behavior=complete_task]', ->
    id = $(this).attr('data-id')
    form = $('#task_result_modal form')
    form.attr('action', '/tasks/' + id)

    if $(this).prop('checked') == false && ($('#tasks_history')[0]? || $('#history-tab')[0]?)
      # Uncomplete a task
      $('#task_result_task_completed').val(false)
      $('select[name="task[result]"]', form).val('')
      form.submit()
      $('#task_' + id).fadeOut()
    else
      row = $('#task_' + id)
      if $(this).attr("data-title")
        title = $(this).attr("data-title")
      else
        title = $(".taskaction", row).html()
        title += " - " + $(".tasktitle", row).html()

      $("#task_result_select, #task_action_select").empty()
      ops = $(this).attr("data-results").split(",")
      actions = $(this).attr("data-actions").split(",")
      $("<select></select>").appendTo "#task_result_select"
      $.each ops, (key, value) ->
        $("#task_result_select select").append $("<option></option>").attr("value", value).text(value)

      $("<select></select>").appendTo "#task_action_select"
      $.each actions, (key, value) ->
        $("#task_action_select select").append $("<option></option>").attr("value", value).text(value)

      #hide result dropdown if only one option
      if ops.length <= 1
        $("#task_result_select").parent().hide()
      else
        $("#task_result_select").parent().show()

      if actions.length <= 1
        $("#task_action_select").parent().hide()
      else
        $("#task_action_select").parent().show()


      # Marking a task off, open the result modal
      $('#task_result_modal').dialog
        title: title,
        resizable: false,
        modal:'true',
        maxHeight: 600,
        buttons: [
          {
            text: __('Complete'),
            click: (e) ->
              $('#task_result_task_result').val($("#task_result_select select").val());
              $('#task_result_task_next_action').val($("#task_action_select select").val());
              $('#task_result_task_completed').val(true)
              $('form', this).submit()
              $('#task_' + id).fadeOut()
              $(this).dialog("close")
              angular.element('#task-followup-dialog').scope().followUpDialog(id, $("#task_action_select select").val())
          },
          {
            text: __('Cancel'),
            click: () ->
              $(this).dialog("close")
          }
        ]

$(document).on 'change', '[name="task[activity_type]"]', ->
  $.mpdx.setOptions($('[name="task[result]"]'), $.mpdx.getTaskResultOptions($(this).val()))
  $.mpdx.setOptions($('[name="task[next_action]"]'), $.mpdx.getTaskNextActionOptions($(this).val()))
  $('.task_location').toggle($(this).val() == 'Appointment')

$.mpdx.getTaskResultOptions = (activity_type) ->
  switch activity_type
    when 'Call'
      return <%= Task::CALL_RESULTS %>.join()
    when 'Appointment'
      return <%= Task::APPOINTMENT_RESULTS %>.join()
    when 'Email'
      return <%= Task::EMAIL_RESULTS %>.join()
    when 'Facebook Message'
      return <%= Task::FACEBOOK_MESSAGE_RESULTS %>.join()
    when 'Text Message'
      return <%= Task::TEXT_RESULTS %>.join()
    when 'Talk to In Person'
      return <%= Task::TALK_TO_IN_PERSON_RESULTS %>.join()
    when 'Prayer Request'
      return <%= Task::PRAYER_REQUEST_RESULTS %>.join()
    when 'Letter'
      return <%= Task::MESSAGE_RESULTS %>.join()
    else
      return <%= Task::STANDARD_RESULTS %>.join()
  end

$.mpdx.getTaskNextActionOptions = (activity_type) ->
  switch activity_type
    when 'Call'
      return <%= Task::CALL_NEXT_ACTIONS %>.join()
    when 'Appointment'
      return <%= Task::APPOINTMENT_NEXT_ACTIONS %>.join()
    when 'Email'
      return <%= Task::EMAIL_NEXT_ACTIONS %>.join()
    when 'Facebook Message'
      return <%= Task::FACEBOOK_MESSAGE_NEXT_ACTIONS %>.join()
    when 'Text Message'
      return <%= Task::TEXT_NEXT_ACTIONS %>.join()
    when 'Talk to In Person'
      return <%= Task::TALK_TO_IN_PERSON_NEXT_ACTIONS %>.join()
    when 'Prayer Request'
      return <%= Task::PRAYER_REQUEST_NEXT_ACTIONS %>.join()
    when 'Pre Call Letter'
      return <%= Task::PRE_CALL_LETTER_NEXT_ACTIONS %>.join()
    when 'Reminder Letter'
      return <%= Task::REMINDER_LETTER_NEXT_ACTIONS %>.join()
    when 'Support Letter'
      return <%= Task::SUPPORT_LETTER_NEXT_ACTIONS %>.join()
    else
      return 'None'
  end

$.mpdx.getSelectedTaskIds = (scope) ->
  scope ||= $(body)
  ids = []
  $('[name="task_ids[]"]:checked', scope).each ->
    ids.push($(this).val())
  ids
