require 'spec_helper'
require 'rspec_api_documentation/dsl'

resource '<%= resource_class_name.pluralize.titleize %>' do
  # This is required!
  # This is the resource's JSONAPI.org `type` attribute to be validated against.
  let(:resource_type) { '<%= dashed_resources_name %>' }

  # Remove this and the authorized context below if not authorizing your requests.
  let(:user) { create(:user_with_account) }

  let(:expected_attribute_keys) do
    # list your expected resource keys vertically here (alphabetical please!)
    %w(
      created-at
      updated-at
    )
  end

  context 'authorized user' do
    before { api_login(user) }

    # index
    get '/my-index-url' do
      example_request 'list <%= resources_human_name %>' do
        check_collection_resource(1)
        expect(resource_object.keys).to eq expected_attribute_keys
        expect(status).to eq 200
      end
    end

    # show
    get '/my-show-url' do
      example_request 'show <%= resource_human_name %>' do
        check_resource
        expect(resource_object.keys).to eq expected_attribute_keys
        expect(status).to eq 200
      end
    end

    # create
    post '/my-create-url' do
      example_request 'create <%= resource_human_name %>' do
        check_resource
        expect(resource_object.keys).to eq expected_attribute_keys
        expect(status).to eq 201
      end
    end

    # update
    put '/my-update-url' do
      example_request 'update <%= resource_human_name %>' do
        check_resource
        expect(resource_object.keys).to eq expected_attribute_keys
        expect(status).to eq 200
      end
    end

    # update
    patch '/my-update-url' do
      example_request 'update <%= resource_human_name %>' do
        check_resource
        expect(resource_object.keys).to eq expected_attribute_keys
        expect(status).to eq 200
      end
    end

    # destroy
    delete '/my-destroy-url' do
      example_request 'delete <%= resource_human_name %>' do
        expect(status).to eq 200
      end
    end
  end
end
